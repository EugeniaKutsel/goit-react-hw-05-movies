{"version":3,"file":"static/js/76.125c0d6f.chunk.js","mappings":"yNACA,EAAuB,mBAAvB,EAAsD,wBAAtD,EAAyF,uBAAzF,EAA2H,uB,kBC+B3H,EAzBa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAcC,OAAOP,IAAUQ,KAAKJ,EACrC,GAAE,CAACJ,KAGF,iBAAKS,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,mBACA,eAAID,UAAWC,EAAf,SACGP,EAAOQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACV,gBAAaN,UAAWC,EAAxB,WACE,gBAAKM,IACHF,EAAY,0CACyBA,GAAiBG,EAAeC,IAAKL,EAAMM,MAAM,MAAMC,OAAO,SACrG,wBAAKP,KACL,uCAAeE,OALRH,EADC,QAWnB,C,8LC5BDS,EAAAA,GAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,oGACRF,EAAAA,GAAAA,IAAA,sCAAyCC,IADjC,cACzBE,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,qDAKjBC,EAAgB,mCAAG,WAAO3B,GAAP,uFACPqB,EAAAA,GAAAA,IAAA,iBAAoBrB,EAApB,oBAAuCsB,EAAvC,oBADO,cACxBE,EADwB,yBAEvBA,EAASC,MAFc,2CAAH,sDAKhBnB,EAAa,mCAAG,WAAON,GAAP,uFACJqB,EAAAA,GAAAA,IAAA,iBAAoBrB,EAApB,4BAA+CsB,EAA/C,oBADI,cACrBE,EADqB,yBAEpBA,EAASC,KAAKG,MAFM,2CAAH,sDAKbC,EAAgB,mCAAG,WAAO7B,GAAP,uFACPqB,EAAAA,GAAAA,IAAA,iBAAoBrB,EAApB,4BAA+CsB,EAA/C,oBADO,cACxBE,EADwB,yBAEvBA,EAASC,KAAKC,SAFS,2CAAH,sDAKhBI,EAAY,mCAAG,WAAOC,GAAP,uFACHV,EAAAA,GAAAA,IAAA,gCAAmCC,EAAnC,iCAAmES,IADhE,cACpBP,EADoB,yBAEnBA,EAASC,KAAKC,SAFK,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","components/services/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"Cast_cast__m5y0R\",\"castTitle\":\"Cast_castTitle__eoJbw\",\"castList\":\"Cast_castList__ARoWn\",\"castItem\":\"Cast_castItem__-Jcfe\"};","import { getMoviesCast } from \"components/services/API\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport css from \"../Cast/Cast.module.css\";\nimport notFoundActor from '../images/notFound.png';\n\n\nconst Cast = () => {\n  const { movieID } = useParams();\n  const [actors, setActors] = useState([]);\n\n  useEffect(() => {\n    getMoviesCast(Number(movieID)).then(setActors);\n  }, [movieID])\n\n  return (\n    <div className={css.cast}>\n      <h2 className={css.castTitle}>Cast</h2>\n      <ul className={css.castList}>\n        {actors.map(({ id, name, profile_path, character }) =>\n          <li key={id} className={css.castItem}>\n            <img src={\n              profile_path ?\n                `https://image.tmdb.org/t/p/w300/${profile_path}` : notFoundActor} alt={name} width='200' height='300' />\n            <h3>{name}</h3>\n            <p>Character: {character}</p>\n          </li>)}\n      </ul>\n    </div>\n  );\n}\n\nexport default Cast;","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'dfe4a00d2e9affe6d840c5d7f47e5fe1';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nexport const getMoviesDetails = async (movieID) => {\n  const response = await axios.get(`/movie/${movieID}?api_key=${API_KEY}&language=en-US`);\n  return response.data;\n}\n\nexport const getMoviesCast = async (movieID) => {\n  const response = await axios.get(`/movie/${movieID}/credits?api_key=${API_KEY}&language=en-US`);\n  return response.data.cast;\n}\n\nexport const getMoviesReviews = async (movieID) => {\n  const response = await axios.get(`/movie/${movieID}/reviews?api_key=${API_KEY}&language=en-US`);\n  return response.data.results;\n}\n\nexport const searchMovies = async (query) => {\n  const response = await axios.get(`/search/movie?api_key=${API_KEY}&language=en-US&query=${query}`);\n  return response.data.results;\n}"],"names":["movieID","useParams","useState","actors","setActors","useEffect","getMoviesCast","Number","then","className","css","map","id","name","profile_path","character","src","notFoundActor","alt","width","height","axios","API_KEY","getTrendingMovies","response","data","results","getMoviesDetails","cast","getMoviesReviews","searchMovies","query"],"sourceRoot":""}